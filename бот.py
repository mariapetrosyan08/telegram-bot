from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, ConversationHandler, filters
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
ASK_NAME, ASK_CLASS, ASK_GOAL, ASK_SCHEDULE = range(4)

TOKEN = "8080321382:AAF7o47tEJHWUhcHnmvymzeKLsIe1XWlcHU"  # ‚Üê –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

OWNER_ID = 1104953636 # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram ID –∏–∑ @userinfobot

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–æ–ø—Ä–æ—Å 1
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ú–∞—Ä–∏—è, —Ç–≤–æ–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ ‚ú®üòä\n\n"
        "–°–æ –º–Ω–æ–π —Ç—ã —Å–º–æ–∂–µ—à—å –∏–∑—É—á–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –ª–µ–≥–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ üí°\n"
        "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ:\n"
        "‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è ‚úÖ\n"
        "‚Ä¢ –°—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è üîó\n"
        "‚Ä¢ –ö–æ–Ω—Å–ø–µ–∫—Ç—ã üìÑ\n\n"
        "–£ —Ç–µ–±—è —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –±–∞–ª–ª–∞–º–∏ –∏ –∂–∏–∑–Ω—è–º–∏ üíé‚ù§Ô∏è\n\n"
        "–û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞—á–∞—Ç—å! üëá\n\n"
        "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"
    )
    return ASK_NAME

# –í–æ–ø—Ä–æ—Å 2 ‚Äî –∫–ª–∞—Å—Å
async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –ê –≤ –∫–∞–∫–æ–º —Ç—ã –∫–ª–∞—Å—Å–µ?")
    return ASK_CLASS

# –í–æ–ø—Ä–æ—Å 3 ‚Äî —Ü–µ–ª—å
async def get_class(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["class"] = update.message.text
    await update.message.reply_text(
        "–ü–æ–Ω—è–ª–∞! –ê –∫–∞–∫–∞—è —Ç–≤–æ—è —Ü–µ–ª—å?\n"
        "–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏, –í–ü–†, –û–ì–≠ –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?"
    )
    return ASK_GOAL

# –í–æ–ø—Ä–æ—Å 4 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
async def get_goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["goal"] = update.message.text
    name = context.user_data["name"]

    await update.message.reply_text(
    f"–û—Ç–ª–∏—á–Ω–æ, {name}! –í–æ—Ç –ø—Ä–∞–≤–∏–ª–∞:\n\n"
    "1. –ï—Å–ª–∏ —Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—à—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –¥–æ–º–∞—à–∫—É ‚Äî –ø–æ–ª—É—á–∞–µ—à—å –±–∞–ª–ª—ã üíé\n"
    "2. –ï—Å–ª–∏ —Ç—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—à—å –¥–æ–º–∞—à–∫—É –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å –∑–∞–Ω—è—Ç–∏–µ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ ‚Äî —Ç–µ—Ä—è–µ—à—å –æ–¥–Ω—É –∂–∏–∑–Ω—å ‚ù§Ô∏è\n"
    "   –£ —Ç–µ–±—è –µ—Å—Ç—å 3 –∂–∏–∑–Ω–∏ –Ω–∞ –º–µ—Å—è—Ü.\n"
    "3. –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –±–æ–Ω—É—Å—ã ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–∏–¥–∫—É, –ø–æ–¥–∞—Ä–æ–∫ –∏–ª–∏ –¥–µ–Ω—å –±–µ–∑ –¥–æ–º–∞—à–∫–∏ üéÅüí°\n"
    "4. –ü–µ—Ä–≤—ã–π —É—Ä–æ–∫ ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π üéÅ\n"
    "5. –í—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø–ª–∞—á–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è. üí∏\n"
    "   –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∞–µ—Ç ‚Äî –ø–µ—Ä–µ–≤–æ–∂—É —Ç–µ–±—è –Ω–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É.\n\n"
    "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, –∫–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è.\n"
    "–£–∫–∞–∂–∏ –¥–Ω–∏, –≤—Ä–µ–º—è –∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–µ—Å–ª–∏ –∑–Ω–∞–µ—à—å) ‚è∞üåç"
)
    return ASK_SCHEDULE

# –§–∏–Ω–∞–ª ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
async def get_schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["schedule"] = update.message.text
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –Ø –≤—Å—ë –ø—Ä–æ—á–∏—Ç–∞—é –∏ —Å–∫–æ—Ä–æ —Ç–µ–±–µ –æ—Ç–≤–µ—á—É. –î–æ —Å–≤—è–∑–∏!"
    )
    await context.bot.send_message(
        chat_id=OWNER_ID,
        text=f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
             f"–ò–º—è: {context.user_data['name']}\n"
             f"–ö–ª–∞—Å—Å: {context.user_data['class']}\n"
             f"–¶–µ–ª—å: {context.user_data['goal']}\n"
             f"–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è: {context.user_data['schedule']}"
    )
    return ConversationHandler.END

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω.")
    return ConversationHandler.END

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
        ASK_CLASS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_class)],
        ASK_GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_goal)],
        ASK_SCHEDULE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_schedule)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)

app.add_handler(conv_handler)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()
